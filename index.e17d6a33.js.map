{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar board;\nvar score = 0;\nvar rows = 4;\nvar columns = 4;\nvar startButton = document.querySelector(\".start\");\nvar messageStart = document.querySelector(\".message-start\");\nstartButton.addEventListener(\"click\", function() {\n    setGame();\n    setTwo();\n    setTwo();\n    startButton.innerText = \"Restart\";\n    messageStart.classList.add(\"hidden\");\n});\nwindow.onload = function() {\n    setGame();\n};\nfunction setGame() {\n    var gameField = document.getElementsByClassName(\"game-field\")[0];\n    while(gameField.firstChild)gameField.removeChild(gameField.firstChild);\n    board = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        var cell = document.createElement(\"div\");\n        cell.id = r.toString() + \"-\" + c.toString();\n        var num = board[r][c];\n        updateCell(cell, num);\n        document.getElementsByClassName(\"game-field\")[0].append(cell);\n    }\n}\nfunction hasEmptyCell() {\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        if (board[r][c] === 0) return true;\n    }\n    return false;\n}\nfunction setTwo() {\n    if (!hasEmptyCell()) return;\n    var found = false;\n    while(!found){\n        var r = Math.floor(Math.random() * rows);\n        var c = Math.floor(Math.random() * columns);\n        if (board[r][c] === 0) {\n            var num = Math.random() <= 0.1 ? 4 : 2;\n            board[r][c] = num;\n            var cell = document.getElementById(r.toString() + \"-\" + c.toString());\n            cell.innerText = num.toString();\n            cell.classList.add(\"field-cell--\".concat(num));\n            found = true;\n        }\n    }\n}\nfunction updateCell(cell, num) {\n    cell.innerText = \"\";\n    cell.classList.value = \"\";\n    cell.classList.add(\"field-cell\");\n    if (num > 0) {\n        cell.innerText = num;\n        if (num <= 1024) cell.classList.add(\"field-cell--\".concat(num));\n        else cell.classList.add(\"field-cell--2048\");\n    }\n}\nfunction checkWin() {\n    for(var r = 0; r < rows; r++){\n        for(var c = 0; c < columns; c++)if (board[r][c] === 2048) {\n            var messageWin = document.querySelector(\".message-win\");\n            messageWin.classList.remove(\"hidden\");\n            return;\n        }\n    }\n}\nfunction checkGameOver() {\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        if (board[r][c] === 0) return false;\n        if (c < columns - 1 && board[r][c] === board[r][c + 1]) return false;\n        if (r < rows - 1 && board[r][c] === board[r + 1][c]) return false;\n    }\n    var messageGameOver = document.querySelector(\".message-lose\");\n    messageGameOver.classList.remove(\"hidden\");\n    return true;\n}\ndocument.addEventListener(\"keyup\", function(e) {\n    switch(e.code){\n        case \"ArrowLeft\":\n            slideLeft();\n            break;\n        case \"ArrowRight\":\n            slideRight();\n            break;\n        case \"ArrowUp\":\n            slideUp();\n            break;\n        case \"ArrowDown\":\n            slideDown();\n            break;\n    }\n    setTwo();\n    document.getElementsByClassName(\"game-score\")[0].innerText = score;\n});\nfunction filterZero(row) {\n    return row.filter(function(num) {\n        return num !== 0;\n    });\n}\nfunction slide(inputRow) {\n    var row = _to_consumable_array(inputRow);\n    row = filterZero(row);\n    for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        score += row[i];\n    }\n    row = filterZero(row);\n    while(row.length < columns)row.push(0);\n    return row;\n}\nfunction slideLeft() {\n    for(var r = 0; r < rows; r++){\n        var row = board[r];\n        row = slide(row);\n        board[r] = row;\n        for(var c = 0; c < columns; c++){\n            var cell = document.getElementById(r.toString() + \"-\" + c.toString());\n            var num = board[r][c];\n            updateCell(cell, num);\n        }\n    }\n    checkWin();\n    checkGameOver();\n}\nfunction slideRight() {\n    for(var r = 0; r < rows; r++){\n        var row = board[r];\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        board[r] = row;\n        for(var c = 0; c < columns; c++){\n            var cell = document.getElementById(r.toString() + \"-\" + c.toString());\n            var num = board[r][c];\n            updateCell(cell, num);\n        }\n    }\n    checkWin();\n    checkGameOver();\n}\nfunction slideUp() {\n    for(var c = 0; c < columns; c++){\n        var row = [\n            board[0][c],\n            board[1][c],\n            board[2][c],\n            board[3][c]\n        ];\n        row = slide(row);\n        for(var r = 0; r < rows; r++){\n            board[r][c] = row[r];\n            var cell = document.getElementById(r.toString() + \"-\" + c.toString());\n            var num = board[r][c];\n            updateCell(cell, num);\n        }\n    }\n    checkWin();\n    checkGameOver();\n}\nfunction slideDown() {\n    for(var c = 0; c < columns; c++){\n        var row = [\n            board[0][c],\n            board[1][c],\n            board[2][c],\n            board[3][c]\n        ];\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        for(var r = 0; r < rows; r++){\n            board[r][c] = row[r];\n            var cell = document.getElementById(r.toString() + \"-\" + c.toString());\n            var num = board[r][c];\n            updateCell(cell, num);\n        }\n    }\n    checkWin();\n    checkGameOver();\n}\n\n//# sourceMappingURL=index.e17d6a33.js.map\n","'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\n\nstartButton.addEventListener('click', () => {\n  setGame();\n  setTwo();\n  setTwo();\n  startButton.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n});\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  const gameField = document.getElementsByClassName('game-field')[0];\n\n  while (gameField.firstChild) {\n    gameField.removeChild(gameField.firstChild);\n  }\n\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.createElement('div');\n\n      cell.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateCell(cell, num);\n      document.getElementsByClassName('game-field')[0].append(cell);\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwo() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      const num = Math.random() <= 0.1 ? 4 : 2;\n\n      board[r][c] = num;\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      cell.innerText = num.toString();\n      cell.classList.add(`field-cell--${num}`);\n      found = true;\n    }\n  }\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num;\n\n    if (num <= 1024) {\n      cell.classList.add(`field-cell--${num}`);\n    } else {\n      cell.classList.add('field-cell--2048');\n    }\n  }\n}\n\nfunction checkWin() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        const messageWin = document.querySelector('.message-win');\n\n        messageWin.classList.remove('hidden');\n\n        return;\n      }\n    }\n  }\n}\n\nfunction checkGameOver() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return false;\n      }\n\n      if (c < columns - 1 && board[r][c] === board[r][c + 1]) {\n        return false;\n      }\n\n      if (r < rows - 1 && board[r][c] === board[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  const messageGameOver = document.querySelector('.message-lose');\n\n  messageGameOver.classList.remove('hidden');\n\n  return true;\n}\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n  }\n\n  setTwo();\n\n  document.getElementsByClassName('game-score')[0].innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter((num) => num !== 0);\n}\n\nfunction slide(inputRow) {\n  let row = [...inputRow];\n\n  row = filterZero(row);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n\n  checkWin();\n  checkGameOver();\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n\n  checkWin();\n  checkGameOver();\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n\n  checkWin();\n  checkGameOver();\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n\n  checkWin();\n  checkGameOver();\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","board","score","startButton","document","querySelector","messageStart","setGame","gameField","getElementsByClassName","firstChild","removeChild","r","c","cell","createElement","id","toString","updateCell","append","setTwo","hasEmptyCell","found","Math","floor","random","num","getElementById","innerText","classList","add","concat","value","checkWin","messageWin","remove","checkGameOver","columns","rows","messageGameOver","filterZero","row","filter","slide","inputRow","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","call","slice","constructor","name","test","_non_iterable_spread","TypeError","push","addEventListener","window","onload","e","code","slideLeft","slideRight","reverse","slideUp","slideDown"],"version":3,"file":"index.e17d6a33.js.map"}